sed命令的语法格式：
-------------------------------------------------------
sed的命令格式： sed [option] 'sed command'filename
sed的脚本格式：sed [option] -f 'sed script'filename
sed命令组成：
	sed + 命令选项【-n,-e, -f, -r, -i】 
		+ 行定位【行号，正则】 --- ( ex： 3, 6  or  /^/ , /$/ or /^/, 8)
		+ 编辑命令【a\, i\, s, c\, d】
		+ 定位编辑对象 【正则, 分组】 (ex: ^, $, &, /1)
		+ 输出选项 【p, w, r】 --- ( ex： sed -i 's/IPADDR/ip/w ip.txt' test)
		+ 要操作的文件
	

0. sed命令的选项(option)：
	-n ：只打印模式匹配的行
	-e ：直接在命令行模式上进行sed动作编辑，此为默认选项
	-f ：将sed的动作写在一个文件内，用–f filename 执行filename内的sed动作
	-r ：支持扩展表达式
	-i ：直接修改文件内容


1. sed在文件中定位文本对象： ----- 行定位
	a. 行号定位
		单行: x	
		多行: x,y

	b. 模式定位
		查询包含模式的行: /pattern/
		查询包含两个模式的行: /pattern/, /pattern/
	
	c. 行号，模式混合定位
		/pattern/,x
		x,/pattern/

	d. 取反定位
		x,y!
		/patten/, x!

	e. example
		sed -n '1, 2p' data
		sed -n '/lonbon/p' data
		sed -n '/lonbon/, 89{=;p}' data
		sed -n '/lonbon/, 100!{=;p}' data


2. 正则匹配(必须结合-r选项): ----- 行内定位
	a. 行匹配
		锚点行首的符合条件的内容: ^pattern
		锚点行首的符合条件的内容: pattern$
		空白行: ^$

	b. 字符匹配
		匹配任意单个字符: .
		匹配紧挨在前面的字符任意次(0,1,多次): *
		匹配任意长度的任意字符: .*
		匹配紧挨在前面的字符0次或1次: \？
		匹配其前面的字符至少m次，至多n次: \{m,n\}
		匹配其前面的字符至少m次:	\{m,\}
		精确匹配前面的m次:	\{m\}

		匹配指定范围内的任意单个字符: []
		匹配指定范围外的任意单个字符: [^]
		所有数字, 相当于0-9， [0-9]---> [[:digit:]]
		所有的小写字母: [:lower:]
		所有的大写字母: [:upper:]
		所有的字母: [:alpha:]
		相当于0-9a-zA-Z: [:alnum:]
		空白字符: [:space:]
		所有标点符号: [:punct:]

	c. 单词匹配
		锚点词首----相当于 \b，用法格式：\<pattern
		锚点词尾，用法格式:\>pattern
		单词锚点: \<pattern\>
	
	d. 分组，用法格式：(pattern):，引用\1,\2

	e. example 
		 #######sed的匹配模式支持正则表达式#####################  
		 sed'5 p'/etc/passwd#打印前5行  
		 sed -n '/r*t/p'/etc/passwd#打印匹配r有0个或者多个，后接一个t字符的行  
		 sed -n '/.r.*/p'/etc/passwd#打印匹配有r的行并且r后面跟任意字符  
		 sed -n '/o*/p'/etc/passwd#打印o字符重复任意次  
		 sed -n '/o\{1,\}/p'/etc/passwd#打印o字重复出现一次以上  
		 sed -n '/o\{1,3\}/p'/etc/passwd#打印o字重复出现一次到三次之间以上  
		 sed的编辑命令(sed command)：
		 
3. 编辑命令: ------- 行操作
	 打印匹配行（和-n选项一起合用）: p
	 显示文件行号: =
	 在定位行号后附加新文本信息: a\
	 在定位行号后插入新文本信息: i\
	 删除定位行: d
	 用新文本替换定位文本: c\
	 写文本到一个文件，类似输出重定向: w filename
	 从另一个文件中读文本，类似输入重定向: r filename
	 使用替换模式替换相应模式: s
	 第一个模式匹配完成后退出或立即退出: q
	 显示与八进制ACSII代码等价的控制符: l
	 在定位行执行的命令组，用分号隔开: {}

	 在数据流中添加下一行以创建用于处理的多行组: N
	 从另一个文件中读文本下一行，并从下一条命令而不是第一条命令开始对其的处理: n
	 将模式2粘贴到/pattern n/: g
	 传送字符，替换单个字符: y

4. Demo 
	 a. sed命令打印文件信息(查询)：
		####用sed打印文件的信息的例子的命令######  
		sed -n '/^#/!p'  /etc/vsftpd/vsftpd.conf         
		sed -n '/^#/!{/^$/!p}'  /etc/vsftpd/vsftpd.conf  
		sed -e '/^#/d' -e '/^$/d'  /etc/vsftpd/vsftpd.conf  
		sed -n '1,/adm/p' /etc/passwd  
		sed -n '/adm/,6p' /etc/passwd  
		sed -n '/adm/,4p' /etc/passwd  
		sed -n '/adm/,2p' /etc/passwd  

	b. sed命令实现对文件内容的添加：(对源文件添加的话就用-i参数):
		文件的行首添加一行: sed -i '1 i\sed command start' myfile  
		文件的行尾追加一行: sed -i '$ a\sed command end' myfile  


