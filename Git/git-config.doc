/*************************************************************************
 > File Name: git-config.doc
 > Author: Leafxu
 > Created Time: Tue 12 Jun 2018 09:44:16 AM CST
 ************************************************************************/
 1. 配置忽略文件
    a. 在仓库的根目录下创建.gitignore文件。如果你想忽略 *.o 文件， 则直接在文件中写入*.o;(换行隔开)
    b. 强制提交：  git add -f app.o
    c. 检查忽略哪些文件： git check-ignore
    d. 忽略通配规则例子:
	规则:
	斜杠"/"开头表示目录
	星号"*"通配多个字符
	问号"?"通配单个字符
	方括号"[]"包含单个字符的匹配列表
	叹号"!"表示不忽略匹配到的文件或目录
	
	例子：
	foo/*：忽略目录 foo下的全部内容
	*.[oa]：忽略所有.o和.a文件
	!calc.o：不能忽略calc.o文件

        e. 在Git仓库中有一个".git/info/exclude"文件，当我们指向对特定的仓库使用特定的过滤规则时，我们可以把过滤语句写在exclude文件中。

 2. 配置别名
    a. '--global' 参数是全局参数，也就是这些命令在这台电脑的所有Git仓库下都有用。
        ---> git config --global alias.co checkout
        ---> git config --global alias.ci commit
        ---> git config --global alias.br branch
        ---> git config --global alias.unstage 'reset HEAD' 
             把暂存区的修改撤销掉（unstage），重新放回工作区。一个unstage操作。
             git unstage test.py <=> git reset HEAD test.py

        ---> git config --global alias.last 'log -1'
        ---> git config --global alias.lg "log --color --graph 
                --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
                 --abbrev-commit"

    b. 当前用户的Git配置文件放在用户主目录下的一个隐藏文件.gitconfig。
    c. --global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用,t配置文件放在.git/config文件中。

 3. 配置用户邮箱
    a. 查看配置：git config --list
    b. 配置用户：git config user.name "xxxx"
    c. 配置邮箱：git config user.mail "xxxx"
