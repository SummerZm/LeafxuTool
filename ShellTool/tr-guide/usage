1. tr是translate的简写
2. tr命令不接受指定的文件参数，而只是对标准输入进行翻译。
3. tr的命令格式是tr SET1 SET2，凡是在SET1中的字符，都会被替换为SET2中相应位置上的字符! 
	ex: tr 1 2 < height.txt 
	ex: tr ' ' '\11' < height.txt 
	ex: tr ‘a-z’ ‘A-Z’ < word.txt 

4. tr [CHAR*] SET2专用，功能是重复指定的字符到与 SET1 相同长度为止 
	ex: 
	 cat number.txt 
	 1234567890 
	 tr ‘1-5′ ‘[A*]‘ < number.txt 
	 AAAAA67890 

6 [CHAR*REPEAT] SET2专用，功能是将CHAR重复REPEAT次数
	ex:	
	 tr ‘1-9′ ‘[A*5]BCDE’ < number.txt 
	 AAAAABCDE0 

7. tr里面包含SET1和SET2，出现两个集合的大小不同的情况，tr如何处理呢？ 
	A. 第一种情况是SET1>SET2:
		tr 1-5 AB < number.txt 
		ABBBB67890 

	B. 第二种情况SET1<SET2:
		tr 1-3 ABCDE < number.txt 
		ABC4567890 

8. 常用选项:
	-c:   取source-char-list的反义，所有不在source-char-list中的字符。常与-d , -s配合使用。 
	-d:   删除source-char-list中所定义的字符。 
	-s:   浓缩重复字符。标准输入中连续重复出现source-char-list里所列的字符，则将其浓缩成一个或replace-char-list中的字符。 

9. 常用场景
	tr 'X' 'x' 把所有大写X转换成小写x 
	tr '()' '{}' 把( )替换成{ } 
	tr '[a-z]' '[A-Z]' 把所有小写字母变成大写字母 
	tr '[A-Z]' '[N-ZA-M]' 把字符A-M分别转换成N-Z，而N-Z转换成A-M 
	tr -s ' ' ' ' 把多个空格转换成单个空格 
	tr -s "\n" < plane.txt 删除空行 
	tr -d '[0-9]' 删除所有数字 
	tr -s "[a-z][A-Z]" < apps.txt 去除重复出现的字符 

